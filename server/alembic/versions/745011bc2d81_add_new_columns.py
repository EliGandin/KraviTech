"""Add new columns

Revision ID: 745011bc2d81
Revises: 
Create Date: 2024-09-21 16:18:58.085722

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '745011bc2d81'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('mentis', sa.Column('comments', sa.String(), nullable=True))
    op.add_column('mentis', sa.Column('mentor_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mentis', 'mentors', ['mentor_id'], ['id'])
    op.alter_column('mentors', 'field',
               existing_type=postgresql.ENUM('DATA', 'HARDWARE', 'SOFTWARE', name='field'),
               nullable=True)
    op.alter_column('mentors', 'experience',
               existing_type=postgresql.ENUM('LOW', 'MID', 'HIGH', name='experience'),
               nullable=True)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('MENTOR', 'MENTI', name='role'),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('MENTOR', 'MENTI', name='role'),
               nullable=False)
    op.alter_column('mentors', 'experience',
               existing_type=postgresql.ENUM('LOW', 'MID', 'HIGH', name='experience'),
               nullable=False)
    op.alter_column('mentors', 'field',
               existing_type=postgresql.ENUM('DATA', 'HARDWARE', 'SOFTWARE', name='field'),
               nullable=False)
    op.drop_constraint(None, 'mentis', type_='foreignkey')
    op.drop_column('mentis', 'mentor_id')
    op.drop_column('mentis', 'comments')
    # ### end Alembic commands ###
