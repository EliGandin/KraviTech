version: '3.8'

services:
  web:
    build:
      context: client
    ports:
      - "5172:5172"
    depends_on:
      - api
    environment:
      - APP_PORT=5172
      - VITE_BACKEND_URL=${VITE_BACKEND_URL:-http://localhost:8000}
    volumes:
      - ./client:/app
      - app_node_modules:/app/node_modules

  api:
    build:
      context: server
    restart: always
    volumes:
      - ./server:/app
      - api_node_modules:/app/node_modules
    ports:
      - "8000:8000"
    depends_on:
      - db
      - localstack
    environment:
      DATABASE_NAME: ${DB_NAME:-docker}
      DATABASE_USERNAME: ${DB_USERNAME:-docker}
      DATABASE_PASSWORD: ${DB_PASSWORD:-1234}
      DATABASE_URL: ${DATABASE_URL:-postgresql://docker:1234@db:5432/docker}
      DATABASE_PORT: ${DATABASE_PORT:-5433}
      DEBUG: ${AWS_DEBUG:-0}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_ENDPOINT_URL: "http://localstack:4566"

  db:
    image: postgres:14
    build: ./database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-docker}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-1234}
      POSTGRES_DB: ${DB_NAME:-docker}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"  # Single entry point for all AWS services
    environment:
      - DEBUG=${AWS_DEBUG:-0}
      - SERVICES=s3,dynamodb,lambda,sqs  # Run all services in one container
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-test}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-test}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - ADMIN_SQS_URL=${ADMIN_SQS_URL:-http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/admin_messages}
    #      - PERSISTENCE=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  s3-populate:
    depends_on:
      localstack:
        condition: service_healthy
    image: ghcr.io/ido123ziv/openu-web-develop-20995/populate:latest-dev
    build:
      context: server/aws/s3/populate
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_ENDPOINT_URL: http://localstack:4566
      BUCKET_NAME: ${BUCKET_NAME:-data}
      IMAGES_DIR: ${IMAGES_DIR:-/aws}
    volumes:
      - ./assets:/aws
    command: [ "python3", "main.py", "--action", "bucket" ]

  s3-populate-db:
    depends_on:
      localstack:
        condition: service_healthy
      db:
        condition: service_healthy
      s3-populate:
        condition: service_completed_successfully
    image: ghcr.io/ido123ziv/openu-web-develop-20995/populate:latest-dev
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_ENDPOINT_URL: http://localstack:4566
      BUCKET_NAME: ${BUCKET_NAME:-data}
      IMAGES_DIR: ${IMAGES_DIR:-/aws}
      DATABASE_NAME: ${DB_NAME:-docker}
      DATABASE_USERNAME: ${DB_USERNAME:-docker}
      DATABASE_PASSWORD: ${DB_PASSWORD:-1234}
      DATABASE_URL: ${DATABASE_URL:-postgresql://docker:1234@db:5432/docker}
      DATABASE_PORT: ${DATABASE_PORT:-5433}
    command: [ "python3", "main.py", "--action", "db" ]

  dynamodb-populate:
    depends_on:
      localstack:
        condition: service_healthy
      db:
        condition: service_healthy
    #      populate:
    #        condition: service_completed_successfully
    build:
      context: server/aws/dynamo
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_ENDPOINT_URL: "http://localstack:4566"
    command: [ "python3", "main.py", "--action", "dynamo" ]

  sqs_populate_admin_notification:
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: server/aws/sqs
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_ENDPOINT_URL: "http://localstack:4566"
    command: [ "python3", "main.py", "--action", "admin-notification" ]

volumes:
  postgres_data:
  app_node_modules:
  api_node_modules:
