name: Integration Tests - Server

on:
  pull_request:
    branches:
      - main  # Change to your main branch name if different

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged
        ports:
          - 5433:5433  # Expose database port

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx and Docker Compose
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest'

      - name: Install Docker Compose
        run: |
          curl -L https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and start Docker containers
        run: |
          docker-compose -f docker-compose.yaml up --build -d

      - name: Wait for services to be ready
        run: |
          # Wait for database to be ready
          until docker exec api pg_isready -U docker -h db; do
            echo "Waiting for database..."
            sleep 2
          done

      - name: Install dependencies (server and client)
        run: |
          docker-compose exec -T api npm install
          docker-compose exec -T web npm install

      - name: Run tests
        run: |
          docker-compose exec -T api npx jest --verbose --detectOpenHandles --config tests/jest.config.ts

      - name: Tear down Docker containers
        run: |
          docker-compose down --volumes --remove-orphans
